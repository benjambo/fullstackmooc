{"version":3,"sources":["services/contacts.js","components/Success.js","components/Errors.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","put","id","delete","Success","message","className","Errors","wrong","Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","People","rows","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","success","setSuccess","error","setError","useEffect","contactService","initialContacts","handleRemoveContact","contact","window","confirm","name","deleteContact","reUpdate","setTimeout","event","target","preventDefault","existingPerson","find","p","number","replacedPerson","map","createdPerson","concat","catch","console","log","filter","word","toLowerCase","includes","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a9320a6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst replace = (newObject) => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, replace, remove}","import React from 'react'\n\nconst Success = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default Success","import React from 'react'\n\nconst Errors = ({ wrong }) => {\n  if (wrong === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {wrong}\n    </div>\n  )\n}\n\nexport default Errors","import React, { useState, useEffect } from 'react'\nimport contactService from './services/contacts'\nimport Success from './components/Success'\nimport Errors from './components/Errors'\n\n\nconst Filter = (props) => (\n  <form>\n    <div>\n      Filter shown with: <input value={props.newFilter}\n      onChange={props.handleFilterChange}/>\n    </div>\n  </form>\n)\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addContact}>\n  <div>\n    name: <input value={props.newName}\n    onChange={props.handleNameChange}/>\n  </div>\n  <div>\n    number: <input value={props.newNumber}\n    onChange={props.handleNumberChange} />\n  </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n</form>\n)\n\nconst People = (props) => <div>{props.rows}</div>\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [success, setSuccess] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n  const rows = () => persons.filter(word => \n    word.name.toLowerCase().includes(newFilter.toLowerCase())).map(contact => {\n    return <p key={contact.id}>{contact.name} {contact.number} \n    <button onClick={() => handleRemoveContact(contact)}>delete</button></p>\n  })\n  const addContact = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson) {\n      const ok = window.confirm(`${newName} already exists in phonebook, do you want to update number?`)\n      if (ok) {\n        contactService\n          .replace({\n            ...existingPerson,\n            number: newNumber\n          })\n          .then(replacedPerson => {\n            setPersons(persons.map(p => p.name === newName ? replacedPerson : p))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n      return (\n        setNewName(''), setNewNumber('')\n      )\n    }\n  contactService\n      .create({\n        name: newName,\n        number: newNumber\n      })\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n        setSuccess(`Added ${createdPerson.name}`)\n        setTimeout(() => {\n          setSuccess(null)\n        }, 3000)\n      })\n      .catch(error => {\n        setError(`${error.response.data}`)\n        console.log(error.response.data)\n        setTimeout(() => {\n          setError(null)\n        }, 2000)\n      })\n  }\n\n  const handleRemoveContact = (contact) => {\n      const wantToRemove = window.confirm(`Delete ${contact.name}`)\n      if (wantToRemove) {\n        return (\n          contactService\n            .remove(contact.id)\n              .then(deleteContact => {\n                contactService\n                  .getAll()\n                  .then(reUpdate => {\n                    setPersons(reUpdate)\n                    setSuccess(`${contact.name} was removed from phonebook`)\n                    setTimeout(() => {\n                      setSuccess(null)\n              }, 3000)\n            })\n          })\n        )\n      }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Success message={success} />\n      <Errors wrong={error} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add new contact</h2>\n      <PersonForm addContact={addContact} newName={newName} newNumber={newNumber} \n      handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Contacts</h2>\n      <People rows={rows()} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}